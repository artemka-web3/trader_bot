ОПЛАТА ЧЕРЕЗ ЮКАССУ
"""
#___________Payment__Handlers___________
PRICE = types.LabeledPrice(label='Подписка на 1 месяц', amount=500*100) # 500 rub
@dp.message_handler(lambda message: message.text.lower() == 'купить подписку' or message.text.lower() == '/subscribe')
async def subscribe(message: types.Message):
    # добавить проверку если подписка пользователя активна
    if not db.user_exists(message.from_user.id):
        await message.answer("Вас нет в БД, но я это уже исправил! Вызовите команду /subscribe заново!")
        db.add_user(message.from_user.id)
    else:
        if db.check_if_subed(message.from_user.id) == 1:
            await message.answer("Вы уже подписаны!", reply_markup=keyb_for_subed)
        else:
            if PAYMENT_TOKEN_TEST.split(':')[1] == "TEST":
                await bot.send_message(message.chat.id, 'Тестовый платеж')
            await bot.send_invoice(
                message.chat.id,
                title="Подписка на бота",
                description='Активация подписки на бота на 1 месяц',
                provider_token=PAYMENT_TOKEN_TEST,
                currency='rub',
                photo_url='https://media.istockphoto.com/id/679762242/ru/%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F/%D0%B1%D0%B8%D0%B7%D0%BD%D0%B5%D1%81%D0%BC%D0%B5%D0%BD-%D0%B8%D0%BB%D0%B8-%D1%82%D0%BE%D1%80%D0%B3%D0%BE%D0%B2%D0%B5%D1%86-%D0%BD%D0%B0-%D1%84%D0%BE%D0%BD%D0%B4%D0%BE%D0%B2%D0%BE%D0%BC-%D1%80%D1%8B%D0%BD%D0%BA%D0%B5-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%89%D0%B8%D0%B9-%D0%B7%D0%B0-%D1%81%D1%82%D0%BE%D0%BB%D0%BE%D0%BC.jpg?s=1024x1024&w=is&k=20&c=OsEncaxRjp-sbXTQUGF7XtFfSHvG03Cvu1JNl8kis7Y=',
                photo_width=416,
                photo_height=234,
                photo_size=416,
                is_flexible=False,
                prices=[PRICE],
                start_parameter='one-month-subscription',
                payload='test-invoice-payload'
            )

@dp.pre_checkout_query_handler(lambda query: True)
async def pre_checkout_query(pre_checkout_q: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_q.id, ok=True)

@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def successful_payment(message: types.Message):
    print("SUCCESFUL PAYMENT")
    payment_info = message.successful_payment.to_python()
    for k, v in  payment_info.items():
        print(f"{k} = {v}")
    # Добавлять пользователя в бд + считать срок окончания подписки
    sub_start = datetime.now(offset)
    sub_end = datetime.now(offset) + timedelta(days=30)
    db.subcribe(message.chat.id, sub_end, sub_start)
    await bot.send_message(message.chat.id, f'Платеж на сумму {message.successful_payment.total_amount // 100} {message.successful_payment.currency} прошел успешно!!!', reply_markup=keyb_for_subed)
"""



# def count_money_attracted_by_all():
#     users = db.get_all_users()
#     for user_id in users:
#         for sub in client.list_subscriptions(str(user_id)):
#             if sub.successful_transactions_number > 0:
#                 money_paid = sub.amount * sub.successful_transactions_number
#                 db.update_money_paid(user_id, money_paid)
#             elif sub.successful_transactions_number == 0:
#                 db.update_money_paid(user_id, sub.amount)